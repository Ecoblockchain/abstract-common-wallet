{
  "name": "common-faucet",
  "version": "1.0.3",
  "description": "A faucet interface people to host their own faucets and for test suites to get testnet coin",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Andrew Malta",
    "email": "andrew.malta@yale.edu"
  },
  "license": "ISC",
  "repository": {
    "type": "git",
    "url": "https://github.com/andrewmalta13/common-faucet"
  },
  "dependencies": {
    "bigi": "^1.4.0",
    "bitcoinjs-lib": "^1.5.7",
    "request": "^2.58.0"
  },
  "readme": "# common-faucet\n\n## Installation\n\nyou can install the npm module <a href=\"https://www.npmjs.com/package/common-faucet\">here</a>\n\n## Usage\n\nAfter using npm install, require the npm module at the top of the file\n\n```javascript\nvar faucet = require('common-faucet');\n```\nnext specify the following arguments:\n1. A network ie) \"testnet\" or \"mainnet\"\n2. A Common Blockchain Client, see npm modules like blockypher-unofficial chain-unofficial etc.\n\n```javascript\nvar faucetClient = faucet({\n  network: \"testnet\",\n  commonBlockchainClient: (one of the common blockchain objects)\n});\n```\n\n## Get Testnet Coin Programmatically\nYou can use our common-faucet instance at http://blockai-faucet.herokuapp.com/ if you need testnet coin for\nyour test suites. Here is how you would do it:\n\n```javascript\nfaucet.Get({\n  faucetURL: \"http://blockai-faucet.herokuapp.com/\",\n  address: (the address you want the faucet to send to)\n}, callback);\n```\n\n## Functionality\n\n```javascript\n//callback for all of these functions uses the standard callback(err, resp)\n\nfaucet.Balance((some address), callback);\n\n//use our faucet endpoint for now http://blockai-faucet.herokuapp.com/\nfaucet.Get({\n  faucetURL: (the url to a faucet endpoint),\n  address: (the address you want the faucet to send to)\n}, callback);\n\n//note this function requires a good amount of requests (or a batch request) to work.\n//I tested it with common-blockcypher and it required that I specified an api key to common-blockcypher\n//returns the number of milliseconds since the last transaction between the faucetAddress and destinationAddress\n//if there is no tx, it returns null.\nfaucet.LastReceived({\n  faucetAddress: (address of the faucet you wish to inspect),\n  destinationAddress: (the address you wish to probe for faucet transactions)\n}, callback);\n\nfaucet.Send({\n  faucetWIF: (the wif of your faucet address to sign the transactions),\n  amount: (amount in bitcoin you wish to send),\n  destinationAddress: (the address that you wish to send the bitcoin to)\n}, callback);\n```\n\n\n\n\n\n## Maintainers\n* Andrew Malta: andrew.malta@yale.edu\n\n",
  "readmeFilename": "README.md",
  "gitHead": "a6fda9898505c1d1af5500282cad56c28e999f9f",
  "bugs": {
    "url": "https://github.com/andrewmalta13/common-faucet/issues"
  },
  "homepage": "https://github.com/andrewmalta13/common-faucet",
  "_id": "common-faucet@1.0.3",
  "_shasum": "5edff485ed7f4414d298a0080123a66f82064cc7",
  "_from": "common-faucet@*"
}
